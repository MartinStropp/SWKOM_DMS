version: '3.8'
services:
  spring-boot-app:
    build:
      context: .
      dockerfile: Dockerfile_JavaApp
    container_name: spring-boot-server
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - spring-boot-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - spring-boot-network

  postgres_db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: dms_db
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dms_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - spring-boot-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672" # Standard-AMQP-Port
      - "15672:15672" # Management-Webinterface
    environment:
      RABBITMQ_DEFAULT_USER: admin # Standard-Benutzername
      RABBITMQ_DEFAULT_PASS: admin # Standard-Passwort
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq # Persistente Daten
    networks:
      - spring-boot-network


volumes:
  db_data:
  rabbitmq_data:

networks:
  spring-boot-network:
    driver: bridge
